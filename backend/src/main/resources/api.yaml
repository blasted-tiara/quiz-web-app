openapi: 3.0.0
info:
  description: |
    This is a quiz webapp server.
  version: "1.0.0"
  title: Quiz app
  contact:
    email: enver.podgorcevic@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

tags:
  - name: quiz
    description: Quiz operations

paths:
  /admin/quizzes:
    get:
      tags:
        - quiz
      summary: Returns all quizzes
      description: Returns an array of all quizzes user has access to
      operationId: getAllQuizzes
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quiz'
        '401':
          description: Unauthorized quiz access
      security:
        - user_auth: []
    post:
      tags:
      - quiz
      summary: Add new quiz
      operationId: addQuiz
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quiz'
      security:
        - user_auth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                title:
                  description: Quiz title
                  type: string
  /admin/quizzes/{id}:
    get:
      tags:
        - quiz
      summary: Returns all the data of a quiz with matching ID
      operationId: getQuizById
      parameters:
        - name: id
          in: path
          description: Quiz ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quiz'
        '400':
          description: Invalid ID supplied
        '401':
          description: Unauthorized quiz access
        '404':
          description: Quiz not found
      security:
        - user_auth: []
    put:
      tags:
      - quiz
      summary: Update existing quiz
      operationId: updateQuiz
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Quiz not found
        '405':
          description: Validation exception
      security:
        - user_auth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                title:
                  description: Quiz title
                  type: string
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        password:
          type: string
        role:
          type: string
          description: Role of the user
          enum:
            - Admin
            - Editor
            - Player
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
    Quiz:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        picUrl:
          type: string
        creator:
          $ref: '#/components/schemas/User'
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
    Question:
      type: object
      properties:
        id:
          type: integer
          format: int64
        order:
          type: integer
          format: int32
        text:
          type: string
        time:
          type: integer
          format: int32
        points:
          type: integer
          format: int32
        answers: 
          type: array
          items:
            $ref: '#/components/schemas/Answer'
    Answer:
      type: object
      properties:
        id:
          type: integer
          format: int64
        text:
          type: string
        correct:
          type: boolean
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
  securitySchemes:
    user_auth:
      type: http
      scheme: basic
  requestBodies:
    Quiz:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Quiz'
      description: Quiz object that needs to be created
      required: true 